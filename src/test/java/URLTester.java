import org.junit.Test;

import java.net.MalformedURLException;
import java.net.URL;

import static com.codeforsanjose.blic.Crawler.parseUrl;
import static com.codeforsanjose.blic.Crawler.urlEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'falconer_k' at '6/10/16 9:02 PM' with Gradle 2.11
 *
 * @author falconer_k, @date 6/10/16 9:02 PM
 */
public class URLTester {
    @Test public void noSchemaTest() {
        String dirtyUrl = "//main.com";
        URL res = parseUrl(dirtyUrl);
        assertEquals(res.toString(), "http://main.com");
    }

    @Test public void hasHttpTest() {
        String dirtyUrl = "http://main.com";
        URL res = parseUrl(dirtyUrl);
        assertEquals(res.toString(), "http://main.com");
    }

    @Test public void hasHttpsTest() {
        String dirtyUrl = "https://main.com";
        URL res = parseUrl(dirtyUrl);
        assertEquals(res.toString(), "https://main.com");
    }

    @Test public void sameAsHomepageQuerystringTest(){
        URL base = parseUrl("http://main.com");
        URL actual = parseUrl("http://main.com#foo");
        try {
            assertTrue(urlEquals(base, actual));
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
    }

    @Test public void sameAsHomepageSubfolderTest(){
        URL base = parseUrl("http://main.com");
        URL actual = parseUrl("http://main.com/sub/doc.html");
        try {
            assertFalse(urlEquals(base, actual));
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
    }
}
